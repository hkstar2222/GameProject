// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using Com.Viperstudio.Utils;
using DragonBones.Textures;
using DragonBones;

namespace DragonBones
{
	public class UnityFactory :BaseFactory
	{

		public UnityFactory()
		{

			//_names = new string[_textures.Length];

			//for(int ii=0; ii< _names.Length; ii++) {
			//	_names[ii] = _textures[ii].name;
			//}

		}

		/** @private */
		override protected Armature generateArmature(ArmatureData armatureData)
		{
			UnityArmatureDisplay unityArmatureDisplay = new UnityArmatureDisplay ((TextureAtlas)_textureAtlasMap[_currentTextureAtlasName]);
			Armature armature = new Armature(armatureData, new Animation(), new Com.Viperstudio.Events.EventDispatcher(), unityArmatureDisplay);
			return armature;
		}
		
		/** @private */
		override protected Slot generateSlot(SlotData slotData)
		{
			Slot slot = new Slot(slotData);
           
            return slot;
		}
		
		/** @private */
		override protected System.Object generateDisplay(ITextureAtlas textureAtlas, TextureData textureData, DisplayData displayData)
		{
			UnityBoneDisplay display = new UnityBoneDisplay ((TextureAtlas)textureAtlas, textureData, displayData.pivot.X, displayData.pivot.Y);

			/*
			Sprite subTexture = _textures[Array.IndexOf(_names, fullName)];

			if (subTexture!=null)
			{
				//Logger.Log("generate display  " + fullName);
				GameObject imageContainer = new GameObject();

				//GameObject image = new GameObject();
				SpriteRenderer spriteRenderer = imageContainer.AddComponent(typeof(SpriteRenderer)) as SpriteRenderer;
				spriteRenderer.sprite = subTexture;

				//image.transform.parent = imageContainer.transform;

				//image.transform.localPosition = new Vector3( -pivotX/100 , -pivotY/100, 1); 


				return imageContainer;
			}
			return null;
			*/
			return display;
		}
		
	
	}
}

